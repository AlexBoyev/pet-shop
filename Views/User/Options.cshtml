
@model WebApplication2.Models.User

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}






@TempData["emailExists"]
@TempData["PhoneExists"]
@TempData["LoginExists"]
@Html.Partial("Space")

@using (Html.BeginForm("Update", "User", FormMethod.Post))
{

    @Html.HiddenFor(m => m.Login)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Name)
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Address)
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(m => m.Phone, new { htmlAttributes = new { @class = "form-control" } })
        @TempData["InvalidValue"]
        @Html.ValidationMessageFor(m => m.Phone)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Email)
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
        @Html.ValidationMessageFor(m => m.Password)


    </div>
    @Html.AntiForgeryToken(); //to prevent attacks by hackers
    <button type="submit" class="btn btn-primary">Update</button>



}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}